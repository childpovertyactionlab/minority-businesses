colors = poverty_colors,
labels = poverty_labs,
title = "Quintile",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~poverty_pal(poverty),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Poverty rate: ", scales::percent(poverty, accuracy = 0.1)),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = poverty_colors,
labels = poverty_labs,
title = "Poverty Rate",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
child_pov_pal <- colorQuantile(colorRamp(c("#e6eefa", "#0457d1"), interpolate = "spline"), df$child_pov, n = 5)
child_pov_colors <- unique(child_pov_pal(sort(df$child_pov)))
child_pov_labs <- paste(scales::percent(lag(quantile(df$child_pov, seq(0, 1, .2), na.rm = T)), accuracy = 0.1), scales::percent(quantile(df$child_pov, seq(0, 1, .2), na.rm = T), accuracy = 0.1), sep = " - ")[-1]
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~child_pov_pal(child_pov),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Child child_pov rate: ", scales::percent(child_pov, accuracy = 0.1)),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = child_pov_colors,
labels = child_pov_labs,
title = "Child Poverty Rate",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
life_exp_pal <- colorQuantile(colorRamp(c("#d5f5dc", "#04801f"), interpolate = "spline"), df$life_exp, n = 5)
life_exp_colors <- unique(life_exp_pal(sort(df$life_exp)))
life_exp_labs <- paste(scales::percent(lag(quantile(df$life_exp, seq(0, 1, .2), na.rm = T)), accuracy = 0.1), scales::percent(quantile(df$life_exp, seq(0, 1, .2), na.rm = T), accuracy = 0.1), sep = " - ")[-1]
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~life_exp_pal(life_exp),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Life expectancy: ", scales::number(life_exp, accuracy = 0.1)),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = life_exp_colors,
labels = life_exp_labs,
title = "Life Expectancy (yrs)",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
life_exp_pal <- colorQuantile(colorRamp(c("#d5f5dc", "#04801f"), interpolate = "spline"), df$life_exp, n = 5)
life_exp_colors <- unique(life_exp_pal(sort(df$life_exp)))
life_exp_labs <- paste(scales::number(lag(quantile(df$life_exp, seq(0, 1, .2), na.rm = T)), accuracy = 0.1), scales::number(quantile(df$life_exp, seq(0, 1, .2), na.rm = T), accuracy = 0.1), sep = " - ")[-1]
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~life_exp_pal(life_exp),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Life expectancy: ", scales::number(life_exp, accuracy = 0.1), " years"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = life_exp_colors,
labels = life_exp_labs,
title = "Life Expectancy (yrs)",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
life_exp_pal <- colorQuantile(colorRamp(c("#d5f5dc", "#04801f"), interpolate = "spline"), df$life_exp, n = 5)
life_exp_colors <- unique(life_exp_pal(sort(df$life_exp)))
life_exp_labs <- paste(paste(scales::number(lag(quantile(df$life_exp, seq(0, 1, .2), na.rm = T)), accuracy = 0.1), scales::number(quantile(df$life_exp, seq(0, 1, .2), na.rm = T), accuracy = 0.1), sep = " - ")[-1], "years")
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~life_exp_pal(life_exp),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Life expectancy: ", scales::number(life_exp, accuracy = 0.1), " years"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = life_exp_colors,
labels = life_exp_labs,
title = "Life Expectancy",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
life_exp_pal <- colorQuantile(colorRamp(c("#d5f5dc", "#04801f"), interpolate = "spline"), df$life_exp, n = 5)
life_exp_colors <- unique(life_exp_pal(sort(df$life_exp)))
life_exp_labs <- paste(paste(scales::number(lag(quantile(df$life_exp, seq(0, 1, .2), na.rm = T)), accuracy = 0.1), scales::number(quantile(df$life_exp, seq(0, 1, .2), na.rm = T), accuracy = 0.1), sep = " - ")[-1], "years")
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~life_exp_pal(life_exp),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Life expectancy: ", scales::number(life_exp, accuracy = 0.1), " yrs"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = life_exp_colors,
labels = life_exp_labs,
title = "Life Expectancy",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
life_exp_pal <- colorQuantile(colorRamp(c("#d5f5dc", "#04801f"), interpolate = "spline"), df$life_exp, n = 5)
life_exp_colors <- unique(life_exp_pal(sort(df$life_exp)))
life_exp_labs <- paste(paste(scales::number(lag(quantile(df$life_exp, seq(0, 1, .2), na.rm = T)), accuracy = 0.1), scales::number(quantile(df$life_exp, seq(0, 1, .2), na.rm = T), accuracy = 0.1), sep = " - ")[-1], "yrs")
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~life_exp_pal(life_exp),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Life expectancy: ", scales::number(life_exp, accuracy = 0.1), " years"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = life_exp_colors,
labels = life_exp_labs,
title = "Life Expectancy",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
life_exp_pal <- colorQuantile(colorRamp(c("#d5f5dc", "#04801f"), interpolate = "spline"), df$life_exp, n = 5)
life_exp_colors <- unique(life_exp_pal(sort(df$life_exp)))
life_exp_labs <- paste(paste(scales::number(lag(quantile(df$life_exp, seq(0, 1, .2), na.rm = T)), accuracy = 0.1), scales::number(quantile(df$life_exp, seq(0, 1, .2), na.rm = T), accuracy = 0.1), sep = " - ")[-1], "yrs")
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~life_exp_pal(life_exp),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Life expectancy: ", scales::number(life_exp, accuracy = 0.1), " years"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = life_exp_colors,
labels = life_exp_labs,
title = "Life Expectancy (years)",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
heat_effect_F_pal <- colorQuantile(colorRamp(c("#f0d3ce", "#a61903"), interpolate = "spline"), df$heat_effect_F, n = 5)
heat_effect_F_colors <- unique(heat_effect_F_pal(sort(df$heat_effect_F)))
heat_effect_F_pal <- colorQuantile(colorRamp(c("#f0d3ce", "#a61903"), interpolate = "spline"), df$heat_effect_F_jittered, n = 5)
heat_effect_F_colors <- unique(heat_effect_F_pal(sort(df$heat_effect_F)))
heat_effect_F_pal <- colorQuantile(colorRamp(c("#f0d3ce", "#a61903"), interpolate = "spline"), df$heat_effect_F_jittered, n = 5)
heat_effect_F_colors <- unique(heat_effect_F_pal(sort(df$heat_effect_F_jittered)))
View(df)
df <- df %>%
mutate(
heat_effect_F_jittered = jitter(heat_effect_F, amount = 0.0001)
)
heat_effect_F_pal <- colorQuantile(colorRamp(c("#f0d3ce", "#a61903"), interpolate = "spline"), df$heat_effect_F_jittered, n = 5)
heat_effect_F_colors <- unique(heat_effect_F_pal(sort(df$heat_effect_F_jittered)))
heat_effect_F_labs <- paste(scales::label_number(lag(quantile(df$heat_effect_F, seq(0, 1, .2), na.rm = T)), accuracy = 0.1, suffix = "°F"), scales::number(quantile(df$heat_effect_F, seq(0, 1, .2), na.rm = T), accuracy = 0.1, suffix = "°F"), sep = " - ")[-1]
heat_effect_F_labs <- paste(scales::label_number(lag(quantile(df$heat_effect_F, seq(0, 1, .2), na.rm = T)), accuracy = 0.1, suffix = "°F"), scales::number(quantile(df$heat_effect_F, seq(0, 1, .2), na.rm = T), accuracy = 0.1, suffix = "°F"), sep = " - ")[-1]
heat_effect_F_labs <- paste(scales::label_number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T)), accuracy = 0.1, suffix = "°F"), scales::number(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T), accuracy = 0.1, suffix = "°F"), sep = " - ")[-1]
heat_effect_F_colors <- unique(heat_effect_F_pal(sort(df$heat_effect_F_jittered)))
heat_effect_F_labs <- paste(scales::label_number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T)), accuracy = 0.1, suffix = "°F"), scales::number(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T), accuracy = 0.1, suffix = "°F"), sep = " - ")[-1]
scales::label_number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T))
)
scales::label_number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2))))
scales::label_number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T)), accuracy = 0.1, suffix = "°F"),
scales::label_number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T)), accuracy = 0.1, suffix = "°F")
print(scales::label_number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T)), accuracy = 0.1, suffix = "°F"))
print(scales::label_number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T)), accuracy = 0.1, suffix = "F"))
print(scales::number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T)), accuracy = 0.1))
heat_effect_F_pal <- colorQuantile(colorRamp(c("#f0d3ce", "#a61903"), interpolate = "spline"), df$heat_effect_F_jittered, n = 5)
heat_effect_F_colors <- unique(heat_effect_F_pal(sort(df$heat_effect_F_jittered)))
heat_effect_F_labs <- paste(paste0(scales::number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T)), accuracy = 0.1), "°F"), paste0( scales::number(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T), accuracy = 0.1), "°F"), sep = " - ")[-1]
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~heat_effect_F_pal(heat_effect_F),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Heat effect: ", scales::label_number(heat_effect_F, accuracy = 0.1, suffix = "°F")),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = heat_effect_F_colors,
labels = heat_effect_F_labs,
title = "Heat Effect",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
heat_effect_F_labs <- paste(paste0(scales::number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T)), accuracy = 0.1), "°F"), paste0( scales::number(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T), accuracy = 0.1), "°F"), sep = " - ")[-1]
df <- df %>%
mutate(
heat_effect_F_jittered = jitter(heat_effect_F, amount = 0.00001)
)
heat_effect_F_pal <- colorQuantile(colorRamp(c("#f0d3ce", "#a61903"), interpolate = "spline"), df$heat_effect_F_jittered, n = 5)
heat_effect_F_colors <- unique(heat_effect_F_pal(sort(df$heat_effect_F_jittered)))
heat_effect_F_labs <- paste(paste0(scales::number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T)), accuracy = 0.01), "°F"), paste0( scales::number(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T), accuracy = 0.01), "°F"), sep = " - ")[-1]
df <- df %>%
mutate(
heat_effect_F_jittered = jitter(heat_effect_F, amount = 0.001)
)
heat_effect_F_pal <- colorQuantile(colorRamp(c("#f0d3ce", "#a61903"), interpolate = "spline"), df$heat_effect_F_jittered, n = 5)
heat_effect_F_colors <- unique(heat_effect_F_pal(sort(df$heat_effect_F_jittered)))
heat_effect_F_labs <- paste(paste0(scales::number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T)), accuracy = 0.01), "°F"), paste0( scales::number(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T), accuracy = 0.01), "°F"), sep = " - ")[-1]
df <- df %>%
mutate(
heat_effect_F_jittered = jitter(heat_effect_F, amount = 0.01)
)
heat_effect_F_pal <- colorQuantile(colorRamp(c("#f0d3ce", "#a61903"), interpolate = "spline"), df$heat_effect_F_jittered, n = 5)
heat_effect_F_colors <- unique(heat_effect_F_pal(sort(df$heat_effect_F_jittered)))
heat_effect_F_labs <- paste(paste0(scales::number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T)), accuracy = 0.01), "°F"), paste0( scales::number(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T), accuracy = 0.01), "°F"), sep = " - ")[-1]
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~heat_effect_F_pal(heat_effect_F),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Heat effect: ", scales::label_number(heat_effect_F, accuracy = 0.1, suffix = "°F")),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = heat_effect_F_colors,
labels = heat_effect_F_labs,
title = "Heat Effect",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~heat_effect_F_pal(heat_effect_F),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Heat effect: ", scales::number(heat_effect_F, accuracy = 0.1), "°F"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = heat_effect_F_colors,
labels = heat_effect_F_labs,
title = "Heat Effect",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
heat_effect_F_pal <- colorQuantile(colorRamp(c("#f0d3ce", "#a61903"), interpolate = "spline"), df$heat_effect_F_jittered, n = 5)
heat_effect_F_colors <- unique(heat_effect_F_pal(sort(df$heat_effect_F_jittered)))
heat_effect_F_labs <- paste(scales::number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T)), accuracy = 0.01), scales::number(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T), accuracy = 0.01), sep = " - ")[-1]
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~heat_effect_F_pal(heat_effect_F),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Heat effect: ", scales::number(heat_effect_F, accuracy = 0.01), "°F"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = heat_effect_F_colors,
labels = heat_effect_F_labs,
title = "Heat Effect",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
life_exp_colors <- unique(life_exp_pal(sort(df$life_exp)))
life_exp_labs <- paste(paste(scales::number(lag(quantile(df$life_exp, seq(0, 1, .2), na.rm = T)), accuracy = 0.1), scales::number(quantile(df$life_exp, seq(0, 1, .2), na.rm = T), accuracy = 0.1), sep = " - ")[-1])
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~life_exp_pal(life_exp),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Life expectancy: ", scales::number(life_exp, accuracy = 0.1), " years"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = life_exp_colors,
labels = life_exp_labs,
title = "Life Expectancy (years)",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
heat_effect_F_pal <- colorQuantile(colorRamp(c("#f0d3ce", "#a61903"), interpolate = "spline"), df$heat_effect_F_jittered, n = 5)
heat_effect_F_colors <- unique(heat_effect_F_pal(sort(df$heat_effect_F_jittered)))
heat_effect_F_labs <- paste(scales::number(lag(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T)), accuracy = 0.01), scales::number(quantile(df$heat_effect_F_jittered, seq(0, 1, .2), na.rm = T), accuracy = 0.01), sep = " - ")[-1]
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~heat_effect_F_pal(heat_effect_F),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Heat effect: ", scales::number(heat_effect_F, accuracy = 0.01), "°F"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = heat_effect_F_colors,
labels = heat_effect_F_labs,
title = "Heat Effect (°F)",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
PM25_pal <- colorQuantile(colorRamp(c("#faf4de", "#7a6002"), interpolate = "spline"), df$PM25, n = 5)
PM25_colors <- unique(PM25_pal(sort(df$PM25)))
PM25_labs <- paste(paste(scales::number(lag(quantile(df$PM25, seq(0, 1, .2), na.rm = T)), accuracy = 0.1), scales::number(quantile(df$PM25, seq(0, 1, .2), na.rm = T), accuracy = 0.1), sep = " - ")[-1])
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~PM25_pal(PM25),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("PM₂.₅ level: ", scales::number(PM25, accuracy = 0.1), "µg/m³"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = PM25_colors,
labels = PM25_labs,
title = "PM₂.₅ level (µg/m³)",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~PM25_pal(PM25),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("PM₂.₅ level: ", scales::number(PM25, accuracy = 0.1), "µg/m³"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = PM25_colors,
labels = PM25_labs,
title = "PM<sub>2.5</sub> level (µg/m³)",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~PM25_pal(PM25),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("PM<sub>2.5</sub> level: ", scales::number(PM25, accuracy = 0.1), "µg/m³"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = PM25_colors,
labels = PM25_labs,
title = "PM<sub>2.5</sub> level (µg/m³)",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~PM25_pal(PM25),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("PM2.5 level: ", scales::number(PM25, accuracy = 0.1), "µg/m³"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright",
colors = PM25_colors,
labels = PM25_labs,
title = "PM<sub>2.5</sub> level (µg/m³)",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~colorNumeric(colorRamp(c("#fff5fb", "#d1007d"), interpolate = "spline"), c(1,5))(avg_score),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Severity: ", total_score, " out of ", data_count * 5, " (", avg_score, ")"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright", pal = colorNumeric(colorRamp(c("#fff5fb", "#d1007d"), interpolate = "spline"), c(1,5)),
values = ~avg_score,
title = "Average Score",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~colorNumeric(colorRamp(c("#fff5fb", "#d1007d"), interpolate = "spline"), c(1,5))(avg_score),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Severity: ", total_score, " out of ", data_count * 5, " (avg ", avg_score, ")"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright", pal = colorNumeric(colorRamp(c("#fff5fb", "#d1007d"), interpolate = "spline"), c(1,5)),
values = ~avg_score,
title = "Average Score",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
leaflet(data = df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(fillColor = ~colorNumeric(colorRamp(c("#fff5fb", "#d1007d"), interpolate = "spline"), c(1,5))(avg_score),
fillOpacity = 0.7, weight = 1,
color = "white", dashArray = "3",
label = ~paste0("Severity: ", total_score, " out of ", data_count * 5, " (avg ", scales::number(avg_score, accuracy = 0.1), ")"),
labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%
addLegend("bottomright", pal = colorNumeric(colorRamp(c("#fff5fb", "#d1007d"), interpolate = "spline"), c(1,5)),
values = ~avg_score,
title = "Average Score",
opacity = 1) %>%
addPolygons(
data = dallas,
fillColor = "#333333",
fillOpacity = 0.1, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
) %>%
setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])
