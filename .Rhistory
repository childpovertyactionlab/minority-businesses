setMaxBounds(expanded_bounds[1], expanded_bounds[2], expanded_bounds[3], expanded_bounds[4])
m
m <- leaflet(data = vendors,
height = "90vh",
width = "100%",
elementId = "vendor-map",
leafletOptions(
zoomSnap = 0.5,
zoomDelta = 0.5,
# minZoom = 10
)
) %>%
addTiles(urlTemplate = cpaltemplates::cpal_mapbox, attribution = cpaltemplates::cpal_leaflet) %>%
addPolygons(
data = dallas_co,
fillColor = "#333333",
fillOpacity = 0.03, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
)
for(i in seq_along(levels(vendors$HUB))) {
hub <- levels(vendors$HUB)[i]
m <- m %>%
addCircleMarkers(
data = vendors %>% filter(HUB == hub),
group = hub,
radius = 5,
stroke = FALSE,
color = map_palette[i],
fillOpacity = 0.7,
clusterOptions = markerClusterOptions(
maxClusterRadius = 60,
disableClusteringAtZoom = 12
),
label = ~`Company Name`,
popup = ~paste0(
"<b>", `Company Name`, "</b><br/>",
"<i>", HUB_desc, "</i><br/>",
address, "<br/>",
Phone, "<br/>",
Email
)
)
}
m <- m %>%
addLegend(
"bottomright",
pal = colorFactor(map_palette, levels(vendors$HUB), na.color=NULL, ordered = TRUE),
values = ~HUB,
title = "HUB Eligibility",
opacity = 0.7
) %>%
addLayersControl(
overlayGroups = levels(vendors$HUB),
position = "bottomleft",
options = layersControlOptions(collapsed = FALSE)
) %>%
setMaxBounds(expanded_bounds[1], expanded_bounds[2], expanded_bounds[3], expanded_bounds[4])
m
m <- leaflet(data = vendors,
height = "90vh",
width = "100%",
elementId = "vendor-map",
options = leafletOptions(
zoomSnap = 0.5,
zoomDelta = 0.5,
minZoom = 10
)
) %>%
addTiles(urlTemplate = cpaltemplates::cpal_mapbox, attribution = cpaltemplates::cpal_leaflet) %>%
addPolygons(
data = dallas_co,
fillColor = "#333333",
fillOpacity = 0.03, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
)
for(i in seq_along(levels(vendors$HUB))) {
hub <- levels(vendors$HUB)[i]
m <- m %>%
addCircleMarkers(
data = vendors %>% filter(HUB == hub),
group = hub,
radius = 5,
stroke = FALSE,
color = map_palette[i],
fillOpacity = 0.7,
clusterOptions = markerClusterOptions(
maxClusterRadius = 60,
disableClusteringAtZoom = 12
),
label = ~`Company Name`,
popup = ~paste0(
"<b>", `Company Name`, "</b><br/>",
"<i>", HUB_desc, "</i><br/>",
address, "<br/>",
Phone, "<br/>",
Email
)
)
}
m <- m %>%
addLegend(
"bottomright",
pal = colorFactor(map_palette, levels(vendors$HUB), na.color=NULL, ordered = TRUE),
values = ~HUB,
title = "HUB Eligibility",
opacity = 0.7
) %>%
addLayersControl(
overlayGroups = levels(vendors$HUB),
position = "bottomleft",
options = layersControlOptions(collapsed = FALSE)
) %>%
setMaxBounds(expanded_bounds[1], expanded_bounds[2], expanded_bounds[3], expanded_bounds[4])
m
m <- leaflet(data = vendors,
height = "90vh",
width = "100%",
elementId = "vendor-map",
options = leafletOptions(
zoomSnap = 0.5,
zoomDelta = 0.5,
minZoom = 8
)
) %>%
addTiles(urlTemplate = cpaltemplates::cpal_mapbox, attribution = cpaltemplates::cpal_leaflet) %>%
addPolygons(
data = dallas_co,
fillColor = "#333333",
fillOpacity = 0.03, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
)
for(i in seq_along(levels(vendors$HUB))) {
hub <- levels(vendors$HUB)[i]
m <- m %>%
addCircleMarkers(
data = vendors %>% filter(HUB == hub),
group = hub,
radius = 5,
stroke = FALSE,
color = map_palette[i],
fillOpacity = 0.7,
clusterOptions = markerClusterOptions(
maxClusterRadius = 60,
disableClusteringAtZoom = 12
),
label = ~`Company Name`,
popup = ~paste0(
"<b>", `Company Name`, "</b><br/>",
"<i>", HUB_desc, "</i><br/>",
address, "<br/>",
Phone, "<br/>",
Email
)
)
}
m <- m %>%
addLegend(
"bottomright",
pal = colorFactor(map_palette, levels(vendors$HUB), na.color=NULL, ordered = TRUE),
values = ~HUB,
title = "HUB Eligibility",
opacity = 0.7
) %>%
addLayersControl(
overlayGroups = levels(vendors$HUB),
position = "bottomleft",
options = layersControlOptions(collapsed = FALSE)
) %>%
setMaxBounds(expanded_bounds[1], expanded_bounds[2], expanded_bounds[3], expanded_bounds[4])
m
m <- leaflet(data = vendors,
height = "90vh",
width = "100%",
elementId = "vendor-map",
options = leafletOptions(
zoomSnap = 0.5,
zoomDelta = 0.5,
minZoom = 9
)
) %>%
addTiles(urlTemplate = cpaltemplates::cpal_mapbox, attribution = cpaltemplates::cpal_leaflet) %>%
addPolygons(
data = dallas_co,
fillColor = "#333333",
fillOpacity = 0.03, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
)
for(i in seq_along(levels(vendors$HUB))) {
hub <- levels(vendors$HUB)[i]
m <- m %>%
addCircleMarkers(
data = vendors %>% filter(HUB == hub),
group = hub,
radius = 5,
stroke = FALSE,
color = map_palette[i],
fillOpacity = 0.7,
clusterOptions = markerClusterOptions(
maxClusterRadius = 60,
disableClusteringAtZoom = 12
),
label = ~`Company Name`,
popup = ~paste0(
"<b>", `Company Name`, "</b><br/>",
"<i>", HUB_desc, "</i><br/>",
address, "<br/>",
Phone, "<br/>",
Email
)
)
}
m <- m %>%
addLegend(
"bottomright",
pal = colorFactor(map_palette, levels(vendors$HUB), na.color=NULL, ordered = TRUE),
values = ~HUB,
title = "HUB Eligibility",
opacity = 0.7
) %>%
addLayersControl(
overlayGroups = levels(vendors$HUB),
position = "bottomleft",
options = layersControlOptions(collapsed = FALSE)
) %>%
setMaxBounds(expanded_bounds[1], expanded_bounds[2], expanded_bounds[3], expanded_bounds[4])
m
m <- leaflet(data = vendors,
height = "90vh",
width = "100%",
elementId = "vendor-map",
options = leafletOptions(
zoomSnap = 0.5,
zoomDelta = 0.5,
minZoom = 9.5
)
) %>%
addTiles(urlTemplate = cpaltemplates::cpal_mapbox, attribution = cpaltemplates::cpal_leaflet) %>%
addPolygons(
data = dallas_co,
fillColor = "#333333",
fillOpacity = 0.03, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
)
for(i in seq_along(levels(vendors$HUB))) {
hub <- levels(vendors$HUB)[i]
m <- m %>%
addCircleMarkers(
data = vendors %>% filter(HUB == hub),
group = hub,
radius = 5,
stroke = FALSE,
color = map_palette[i],
fillOpacity = 0.7,
clusterOptions = markerClusterOptions(
maxClusterRadius = 60,
disableClusteringAtZoom = 12
),
label = ~`Company Name`,
popup = ~paste0(
"<b>", `Company Name`, "</b><br/>",
"<i>", HUB_desc, "</i><br/>",
address, "<br/>",
Phone, "<br/>",
Email
)
)
}
m <- m %>%
addLegend(
"bottomright",
pal = colorFactor(map_palette, levels(vendors$HUB), na.color=NULL, ordered = TRUE),
values = ~HUB,
title = "HUB Eligibility",
opacity = 0.7
) %>%
addLayersControl(
overlayGroups = levels(vendors$HUB),
position = "bottomleft",
options = layersControlOptions(collapsed = FALSE)
) %>%
setMaxBounds(expanded_bounds[1], expanded_bounds[2], expanded_bounds[3], expanded_bounds[4])
m
m <- leaflet(data = vendors,
height = "90vh",
width = "100%",
elementId = "vendor-map",
options = leafletOptions(
zoomSnap = 0.5,
zoomDelta = 0.5,
minZoom = 9.5,
wheelPxPerZoomLevel = 90
)
) %>%
addTiles(urlTemplate = cpaltemplates::cpal_mapbox, attribution = cpaltemplates::cpal_leaflet) %>%
addPolygons(
data = dallas_co,
fillColor = "#333333",
fillOpacity = 0.03, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
)
for(i in seq_along(levels(vendors$HUB))) {
hub <- levels(vendors$HUB)[i]
m <- m %>%
addCircleMarkers(
data = vendors %>% filter(HUB == hub),
group = hub,
radius = 5,
stroke = FALSE,
color = map_palette[i],
fillOpacity = 0.7,
clusterOptions = markerClusterOptions(
maxClusterRadius = 60,
disableClusteringAtZoom = 12
),
label = ~`Company Name`,
popup = ~paste0(
"<b>", `Company Name`, "</b><br/>",
"<i>", HUB_desc, "</i><br/>",
address, "<br/>",
Phone, "<br/>",
Email
)
)
}
m <- m %>%
addLegend(
"bottomright",
pal = colorFactor(map_palette, levels(vendors$HUB), na.color=NULL, ordered = TRUE),
values = ~HUB,
title = "HUB Eligibility",
opacity = 0.7
) %>%
addLayersControl(
overlayGroups = levels(vendors$HUB),
position = "bottomleft",
options = layersControlOptions(collapsed = FALSE)
) %>%
setMaxBounds(expanded_bounds[1], expanded_bounds[2], expanded_bounds[3], expanded_bounds[4])
m
m <- leaflet(data = vendors,
height = "90vh",
width = "100%",
elementId = "vendor-map",
options = leafletOptions(
zoomSnap = 0.5,
zoomDelta = 0.5,
minZoom = 9.5,
wheelPxPerZoomLevel = 90,
zoom = 10
)
) %>%
addTiles(urlTemplate = cpaltemplates::cpal_mapbox, attribution = cpaltemplates::cpal_leaflet) %>%
addPolygons(
data = dallas_co,
fillColor = "#333333",
fillOpacity = 0.03, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
)
m <- leaflet(data = vendors,
height = "90vh",
width = "100%",
elementId = "vendor-map",
options = leafletOptions(
zoomSnap = 0.5,
zoomDelta = 0.5,
minZoom = 9.5,
wheelPxPerZoomLevel = 90,
zoom = 10
)
) %>%
addTiles(urlTemplate = cpaltemplates::cpal_mapbox, attribution = cpaltemplates::cpal_leaflet) %>%
addPolygons(
data = dallas_co,
fillColor = "#333333",
fillOpacity = 0.03, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
)
for(i in seq_along(levels(vendors$HUB))) {
hub <- levels(vendors$HUB)[i]
m <- m %>%
addCircleMarkers(
data = vendors %>% filter(HUB == hub),
group = hub,
radius = 5,
stroke = FALSE,
color = map_palette[i],
fillOpacity = 0.7,
clusterOptions = markerClusterOptions(
maxClusterRadius = 60,
disableClusteringAtZoom = 12
),
label = ~`Company Name`,
popup = ~paste0(
"<b>", `Company Name`, "</b><br/>",
"<i>", HUB_desc, "</i><br/>",
address, "<br/>",
Phone, "<br/>",
Email
)
)
}
m <- m %>%
addLegend(
"topright",
pal = colorFactor(map_palette, levels(vendors$HUB), na.color=NULL, ordered = TRUE),
values = ~HUB,
title = "HUB Eligibility",
opacity = 0.7
) %>%
addLayersControl(
overlayGroups = levels(vendors$HUB),
position = "topleft",
options = layersControlOptions(collapsed = FALSE)
) %>%
setMaxBounds(expanded_bounds[1], expanded_bounds[2], expanded_bounds[3], expanded_bounds[4])
m
m <- leaflet(data = vendors,
height = "90vh",
width = "100%",
elementId = "vendor-map",
options = leafletOptions(
zoomSnap = 0.5,
zoomDelta = 0.5,
minZoom = 9.5,
wheelPxPerZoomLevel = 90
)
) %>%
setView(zoom = 9.5) %>%
addTiles(urlTemplate = cpaltemplates::cpal_mapbox, attribution = cpaltemplates::cpal_leaflet) %>%
addPolygons(
data = dallas_co,
fillColor = "#333333",
fillOpacity = 0.03, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
)
m <- leaflet(data = vendors,
height = "90vh",
width = "100%",
elementId = "vendor-map",
options = leafletOptions(
zoomSnap = 0.5,
zoomDelta = 0.5,
minZoom = 9.5,
wheelPxPerZoomLevel = 90
)
) %>%
mapOptions(zoomToLimits = "first") %>%
addTiles(urlTemplate = cpaltemplates::cpal_mapbox, attribution = cpaltemplates::cpal_leaflet) %>%
addPolygons(
data = dallas_co,
fillColor = "#333333",
fillOpacity = 0.03, weight = 2, color = "#333333",
smoothFactor = 1,
options = pathOptions(clickable = F, interactive = F)
)
for(i in seq_along(levels(vendors$HUB))) {
hub <- levels(vendors$HUB)[i]
m <- m %>%
addCircleMarkers(
data = vendors %>% filter(HUB == hub),
group = hub,
radius = 5,
stroke = FALSE,
color = map_palette[i],
fillOpacity = 0.7,
clusterOptions = markerClusterOptions(
maxClusterRadius = 60,
disableClusteringAtZoom = 12
),
label = ~`Company Name`,
popup = ~paste0(
"<b>", `Company Name`, "</b><br/>",
"<i>", HUB_desc, "</i><br/>",
address, "<br/>",
Phone, "<br/>",
Email
)
)
}
m <- m %>%
addLegend(
"topright",
pal = colorFactor(map_palette, levels(vendors$HUB), na.color=NULL, ordered = TRUE),
values = ~HUB,
title = "HUB Eligibility",
opacity = 0.7
) %>%
addLayersControl(
overlayGroups = levels(vendors$HUB),
position = "topleft",
options = layersControlOptions(collapsed = FALSE)
) %>%
setMaxBounds(expanded_bounds[1], expanded_bounds[2], expanded_bounds[3], expanded_bounds[4])
m
vendors <- read_csv("data/geocoded_vendors.csv") %>%
filter(`HUB Status` == "Yes") %>%
mutate(
jitter_cond = duplicated(lat) | duplicated(lat, fromLast = TRUE) |
duplicated(long) | duplicated(long, fromLast = TRUE),
long = ifelse(jitter_cond, jitter(long, amount = 0.0001), long),
lat = ifelse(jitter_cond, jitter(lat, amount = 0.0001), lat)
HUB = factor(
devtools::install_github("childpovertyactionlab/cpaltemplates")
