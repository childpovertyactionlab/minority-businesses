{"title":"vendors <- readxl::read_excel(","markdown":{"yaml":{"pagetitle":"Minority Businesses Map","format":"html"},"headingText":"vendors <- readxl::read_excel(","containsRefs":false,"markdown":"\n\n```{r setup, output = F, echo = F}\n\nlibrary(tidycensus)\nlibrary(sf)\nrequire(tidyverse)\nlibrary(leaflet)\n\n#   \"C:/Users/taylo/CPAL Dropbox/Analytics/Projects + Requests/External Requests/Impact Ventures/Business by Race/Comptroller State Approved Vendors.xlsx\",\n#   sheet = \"DallasCountyVendors\")\n# \n# vendorsGC <- vendors %>%\n#   mutate(`Mailing Address` = if_else(str_detect(`Mailing Address`, \",$\"), \n#                                    `Mailing Address`, \n#                                    str_c(`Mailing Address`, \",\")),\n#          address = paste0(`Mailing Address`, \" \", `City`, \", \", `State`, \" \", `ZIP5`, \", \", `Country`)) %>%\n#   tidygeocoder::geocode(address, method = \"arcgis\")\n# \n# write_csv(vendorsGC, \"data/geocoded_vendors.csv\")\n\ndallas_co <- tigris::counties(state = \"TX\") %>%\n  filter(NAME == \"Dallas\")\n\nvendors <- read_csv(\"data/geocoded_vendors.csv\") %>%\n  filter(`HUB Status` == \"Yes\") %>%\n  mutate(\n    jitter_cond = duplicated(lat) | duplicated(lat, fromLast = TRUE) | \n                  duplicated(long) | duplicated(long, fromLast = TRUE),\n    long = ifelse(jitter_cond, jitter(long, amount = 0.0001), long),\n    lat = ifelse(jitter_cond, jitter(lat, amount = 0.0001), lat),\n    HUB = factor(\n      case_when(\n        `HUB Eligibility` == \"BL\" ~ \"Black\",\n        `HUB Eligibility` == \"AS\" ~ \"Asian\",\n        `HUB Eligibility` == \"HI\" ~ \"Hispanic\",\n        `HUB Eligibility` == \"AI\" ~ \"Native American\",\n        `HUB Eligibility` == \"WO\" ~ \"Women Owned\",\n        `HUB Eligibility` == \"DV\" ~ \"Disabled Veteran\",\n        TRUE ~ NA_character_\n      ),\n      levels = c(\"Black\", \"Asian\", \"Hispanic\", \"Native American\", \"Women Owned\", \"Disabled Veteran\")),\n    address = str_replace(address, \", USA$\", \"\"),\n    Phone = ifelse(is.na(Phone), \n                   \"No phone number listed\",\n                   str_replace(Phone, \n                               pattern = \"^(\\\\d{3})-(\\\\d{3})-(\\\\d{4})$\", \n                               replacement = \"(\\\\1) \\\\2-\\\\3\")),\n    HUB_desc = case_when(\n      `HUB Eligibility` == \"BL\" ~ \"Listed as Black-Owned\",\n      `HUB Eligibility` == \"AS\" ~ \"Listed as Asian-Owned\",\n      `HUB Eligibility` == \"HI\" ~ \"Listed as Hispanic-Owned\",\n      `HUB Eligibility` == \"AI\" ~ \"Listed as Native American-Owned\",\n      `HUB Eligibility` == \"WO\" ~ \"Listed as Women-Owned\",\n      `HUB Eligibility` == \"DV\" ~ \"Listed as Owned by Service Disabled Veteran of 20% or More\",\n      TRUE ~ NA_character_)\n    ) %>% \n  sf::st_as_sf(coords = c(\"long\", \"lat\")) %>%\n  sf::st_set_crs(sf::st_crs(dallas_co)) %>%\n  sf::st_join(dallas_co, sf::st_within) %>%\n  filter(!is.na(GEOID))\n\nbounds <- sf::st_bbox(dallas_co)\n\nexpanded_bounds <- as.vector(c(\n  xmin = bounds[\"xmin\"] - 0.25, \n  ymin = bounds[\"ymin\"] - 0.25, \n  xmax = bounds[\"xmax\"] + 0.25, \n  ymax = bounds[\"ymax\"] + 0.25\n))\n\ncount_vendor <- scales::comma(length(unique(vendors$`Vendor ID`)))\n\ncount_black <- scales::comma(nrow(vendors %>% filter(HUB == \"Black\")))\ncount_asian <- scales::comma(nrow(vendors %>% filter(HUB == \"Asian\")))\ncount_hispanic <- scales::comma(nrow(vendors %>% filter(HUB == \"Hispanic\")))\ncount_native <- scales::comma(nrow(vendors %>% filter(HUB == \"Native American\")))\ncount_women <- scales::comma(nrow(vendors %>% filter(HUB == \"Women Owned\")))\ncount_veteran <- scales::comma(nrow(vendors %>% filter(HUB == \"Disabled Veteran\")))\n\n\nmap_palette <- c(\"#008097\", \"#ED683F\", \"#EACA2D\", \"#5C2B1C\", \"#ED018C\", \"#185411\")\n\n```\n\n::: column-screen-inset\n\n```{=html}\n<div class=\"mainboxbox\">\n<div class=\"mainbox\">\n```\n\n:::: {.card}\n\n```{=html}\n<div class=\"cardbox\">\n\n<div class=\"left-card-col dark-col\">\n```\n\n```{=html}\n  <div class=\"card-side\" style=\"width: 94%;\">\n```\n\n# There are `r count_vendor` unique minority-owned vendors in Dallas County\n\n```{=html}\n    <div class=\"subtext\">\n      &#8212; Texas Comptroller (2023)\n    </div>\n  </div>\n</div>\n```\n\n```{=html}\n<div class=\"right-card-col\">\n\n  <div style=\"width: 3%\">\n  </div>\n\n  <div class=\"card-side\">\n    \n    <h4>\n      <div class=\"rounded-outline\"><b>`r count_black`</b></div> listed as <span style=\"color: #008097;\">Black-owned</span>\n    </h4>\n    <h4>\n      <div class=\"rounded-outline\"><b>`r count_asian`</b></div> listed as <span style=\"color: #ED683F;\">Asian-owned</span>\n    </h4>\n    <h4>\n      <div class=\"rounded-outline\"><b>`r count_hispanic`</b></div> listed as <span style=\"color: #bd9e0b;\">Hispanic-owned</span>\n    </h4>\n    <h4>\n      <div class=\"rounded-outline\"><b>`r count_native`</b></div> listed as <span style=\"color: #5C2B1C;\">Native American-owned</span>\n    </h4>\n    <h4>\n      <div class=\"rounded-outline\"><b>`r count_women`</b></div> listed as <span style=\"color: #ED018C;\">Women-owned</span>\n    </h4>\n    <h4>\n      <div class=\"rounded-outline\"><b>`r count_veteran`</b></div> listed as owned by a <span style=\"color: #185411;\">Service Disabled Veteran of 20% or more</span>\n    </h4>\n\n  </div>\n</div>\n\n</div>\n\n```\n\n::::\n\n```{=html}\n\n<div class=\"mapscroll-container\">\n  <a href=\"javascript:void(0);\" class=\"scroll-link\" onclick=\"scrollToMap()\">\n      Click for map <i class=\"bi bi-chevron-down\"></i>\n  </a>\n</div>\n\n```\n\n```{r map}\n\nm <- leaflet(data = vendors, \n             height = \"90vh\", \n             width = \"100%\", \n             elementId = \"vendor-map\",\n             options = leafletOptions(\n               zoomSnap = 0.5,\n               zoomDelta = 0.5,\n               minZoom = 9.5,\n               wheelPxPerZoomLevel = 120\n               )\n             ) %>%\n  addTiles(urlTemplate = cpaltemplates::cpal_mapbox, attribution = cpaltemplates::cpal_leaflet) %>%\n  addPolygons(\n    data = dallas_co,\n    fillColor = \"#333333\",\n    fillOpacity = 0.03, weight = 2, color = \"#333333\",\n    smoothFactor = 1,\n    options = pathOptions(clickable = F, interactive = F)\n  )\n\nfor(i in seq_along(levels(vendors$HUB))) {\n  hub <- levels(vendors$HUB)[i]\n  m <- m %>%\n    addCircleMarkers(\n      data = vendors %>% filter(HUB == hub),\n      group = hub,\n      radius = 5,\n      stroke = FALSE,\n      color = map_palette[i],\n      fillOpacity = 0.7,\n      clusterOptions = markerClusterOptions(\n        maxClusterRadius = 60,\n        disableClusteringAtZoom = 12\n      ),\n      label = ~`Company Name`,\n      popup = ~paste0(\n        \"<b>\", `Company Name`, \"</b><br/>\",\n        \"<i>\", HUB_desc, \"</i><br/>\",\n        address, \"<br/>\",\n        Phone, \"<br/>\",\n        Email\n      )\n    )\n}\n\nm <- m %>%\n  addLegend(\n    \"topright\",\n    pal = colorFactor(map_palette, levels(vendors$HUB), na.color=NULL, ordered = TRUE),\n    values = ~HUB,\n    title = \"HUB Eligibility\",\n    opacity = 0.7\n  ) %>%\n  addLayersControl(\n    overlayGroups = levels(vendors$HUB),\n    position = \"topleft\",\n    options = layersControlOptions(collapsed = FALSE)\n  ) %>%\n  setMaxBounds(expanded_bounds[1], expanded_bounds[2], expanded_bounds[3], expanded_bounds[4])\n\nm\n```\n\n```{=html}\n\n<script>\nfunction scrollToMap() {\n    const element = document.getElementById('vendor-map');\n    const headerOffset = 70; // height of your fixed header\n    const elementPosition = element.getBoundingClientRect().top;\n    const offsetPosition = elementPosition + window.pageYOffset - headerOffset;\n\n    window.scrollTo({\n        top: offsetPosition,\n        behavior: 'smooth'\n    });\n}\n</script>\n\n```\n\n\n```{=html}\n</div>\n</div>\n\n```\n\n:::","srcMarkdownNoYaml":"\n\n```{r setup, output = F, echo = F}\n\nlibrary(tidycensus)\nlibrary(sf)\nrequire(tidyverse)\nlibrary(leaflet)\n\n# vendors <- readxl::read_excel(\n#   \"C:/Users/taylo/CPAL Dropbox/Analytics/Projects + Requests/External Requests/Impact Ventures/Business by Race/Comptroller State Approved Vendors.xlsx\",\n#   sheet = \"DallasCountyVendors\")\n# \n# vendorsGC <- vendors %>%\n#   mutate(`Mailing Address` = if_else(str_detect(`Mailing Address`, \",$\"), \n#                                    `Mailing Address`, \n#                                    str_c(`Mailing Address`, \",\")),\n#          address = paste0(`Mailing Address`, \" \", `City`, \", \", `State`, \" \", `ZIP5`, \", \", `Country`)) %>%\n#   tidygeocoder::geocode(address, method = \"arcgis\")\n# \n# write_csv(vendorsGC, \"data/geocoded_vendors.csv\")\n\ndallas_co <- tigris::counties(state = \"TX\") %>%\n  filter(NAME == \"Dallas\")\n\nvendors <- read_csv(\"data/geocoded_vendors.csv\") %>%\n  filter(`HUB Status` == \"Yes\") %>%\n  mutate(\n    jitter_cond = duplicated(lat) | duplicated(lat, fromLast = TRUE) | \n                  duplicated(long) | duplicated(long, fromLast = TRUE),\n    long = ifelse(jitter_cond, jitter(long, amount = 0.0001), long),\n    lat = ifelse(jitter_cond, jitter(lat, amount = 0.0001), lat),\n    HUB = factor(\n      case_when(\n        `HUB Eligibility` == \"BL\" ~ \"Black\",\n        `HUB Eligibility` == \"AS\" ~ \"Asian\",\n        `HUB Eligibility` == \"HI\" ~ \"Hispanic\",\n        `HUB Eligibility` == \"AI\" ~ \"Native American\",\n        `HUB Eligibility` == \"WO\" ~ \"Women Owned\",\n        `HUB Eligibility` == \"DV\" ~ \"Disabled Veteran\",\n        TRUE ~ NA_character_\n      ),\n      levels = c(\"Black\", \"Asian\", \"Hispanic\", \"Native American\", \"Women Owned\", \"Disabled Veteran\")),\n    address = str_replace(address, \", USA$\", \"\"),\n    Phone = ifelse(is.na(Phone), \n                   \"No phone number listed\",\n                   str_replace(Phone, \n                               pattern = \"^(\\\\d{3})-(\\\\d{3})-(\\\\d{4})$\", \n                               replacement = \"(\\\\1) \\\\2-\\\\3\")),\n    HUB_desc = case_when(\n      `HUB Eligibility` == \"BL\" ~ \"Listed as Black-Owned\",\n      `HUB Eligibility` == \"AS\" ~ \"Listed as Asian-Owned\",\n      `HUB Eligibility` == \"HI\" ~ \"Listed as Hispanic-Owned\",\n      `HUB Eligibility` == \"AI\" ~ \"Listed as Native American-Owned\",\n      `HUB Eligibility` == \"WO\" ~ \"Listed as Women-Owned\",\n      `HUB Eligibility` == \"DV\" ~ \"Listed as Owned by Service Disabled Veteran of 20% or More\",\n      TRUE ~ NA_character_)\n    ) %>% \n  sf::st_as_sf(coords = c(\"long\", \"lat\")) %>%\n  sf::st_set_crs(sf::st_crs(dallas_co)) %>%\n  sf::st_join(dallas_co, sf::st_within) %>%\n  filter(!is.na(GEOID))\n\nbounds <- sf::st_bbox(dallas_co)\n\nexpanded_bounds <- as.vector(c(\n  xmin = bounds[\"xmin\"] - 0.25, \n  ymin = bounds[\"ymin\"] - 0.25, \n  xmax = bounds[\"xmax\"] + 0.25, \n  ymax = bounds[\"ymax\"] + 0.25\n))\n\ncount_vendor <- scales::comma(length(unique(vendors$`Vendor ID`)))\n\ncount_black <- scales::comma(nrow(vendors %>% filter(HUB == \"Black\")))\ncount_asian <- scales::comma(nrow(vendors %>% filter(HUB == \"Asian\")))\ncount_hispanic <- scales::comma(nrow(vendors %>% filter(HUB == \"Hispanic\")))\ncount_native <- scales::comma(nrow(vendors %>% filter(HUB == \"Native American\")))\ncount_women <- scales::comma(nrow(vendors %>% filter(HUB == \"Women Owned\")))\ncount_veteran <- scales::comma(nrow(vendors %>% filter(HUB == \"Disabled Veteran\")))\n\n\nmap_palette <- c(\"#008097\", \"#ED683F\", \"#EACA2D\", \"#5C2B1C\", \"#ED018C\", \"#185411\")\n\n```\n\n::: column-screen-inset\n\n```{=html}\n<div class=\"mainboxbox\">\n<div class=\"mainbox\">\n```\n\n:::: {.card}\n\n```{=html}\n<div class=\"cardbox\">\n\n<div class=\"left-card-col dark-col\">\n```\n\n```{=html}\n  <div class=\"card-side\" style=\"width: 94%;\">\n```\n\n# There are `r count_vendor` unique minority-owned vendors in Dallas County\n\n```{=html}\n    <div class=\"subtext\">\n      &#8212; Texas Comptroller (2023)\n    </div>\n  </div>\n</div>\n```\n\n```{=html}\n<div class=\"right-card-col\">\n\n  <div style=\"width: 3%\">\n  </div>\n\n  <div class=\"card-side\">\n    \n    <h4>\n      <div class=\"rounded-outline\"><b>`r count_black`</b></div> listed as <span style=\"color: #008097;\">Black-owned</span>\n    </h4>\n    <h4>\n      <div class=\"rounded-outline\"><b>`r count_asian`</b></div> listed as <span style=\"color: #ED683F;\">Asian-owned</span>\n    </h4>\n    <h4>\n      <div class=\"rounded-outline\"><b>`r count_hispanic`</b></div> listed as <span style=\"color: #bd9e0b;\">Hispanic-owned</span>\n    </h4>\n    <h4>\n      <div class=\"rounded-outline\"><b>`r count_native`</b></div> listed as <span style=\"color: #5C2B1C;\">Native American-owned</span>\n    </h4>\n    <h4>\n      <div class=\"rounded-outline\"><b>`r count_women`</b></div> listed as <span style=\"color: #ED018C;\">Women-owned</span>\n    </h4>\n    <h4>\n      <div class=\"rounded-outline\"><b>`r count_veteran`</b></div> listed as owned by a <span style=\"color: #185411;\">Service Disabled Veteran of 20% or more</span>\n    </h4>\n\n  </div>\n</div>\n\n</div>\n\n```\n\n::::\n\n```{=html}\n\n<div class=\"mapscroll-container\">\n  <a href=\"javascript:void(0);\" class=\"scroll-link\" onclick=\"scrollToMap()\">\n      Click for map <i class=\"bi bi-chevron-down\"></i>\n  </a>\n</div>\n\n```\n\n```{r map}\n\nm <- leaflet(data = vendors, \n             height = \"90vh\", \n             width = \"100%\", \n             elementId = \"vendor-map\",\n             options = leafletOptions(\n               zoomSnap = 0.5,\n               zoomDelta = 0.5,\n               minZoom = 9.5,\n               wheelPxPerZoomLevel = 120\n               )\n             ) %>%\n  addTiles(urlTemplate = cpaltemplates::cpal_mapbox, attribution = cpaltemplates::cpal_leaflet) %>%\n  addPolygons(\n    data = dallas_co,\n    fillColor = \"#333333\",\n    fillOpacity = 0.03, weight = 2, color = \"#333333\",\n    smoothFactor = 1,\n    options = pathOptions(clickable = F, interactive = F)\n  )\n\nfor(i in seq_along(levels(vendors$HUB))) {\n  hub <- levels(vendors$HUB)[i]\n  m <- m %>%\n    addCircleMarkers(\n      data = vendors %>% filter(HUB == hub),\n      group = hub,\n      radius = 5,\n      stroke = FALSE,\n      color = map_palette[i],\n      fillOpacity = 0.7,\n      clusterOptions = markerClusterOptions(\n        maxClusterRadius = 60,\n        disableClusteringAtZoom = 12\n      ),\n      label = ~`Company Name`,\n      popup = ~paste0(\n        \"<b>\", `Company Name`, \"</b><br/>\",\n        \"<i>\", HUB_desc, \"</i><br/>\",\n        address, \"<br/>\",\n        Phone, \"<br/>\",\n        Email\n      )\n    )\n}\n\nm <- m %>%\n  addLegend(\n    \"topright\",\n    pal = colorFactor(map_palette, levels(vendors$HUB), na.color=NULL, ordered = TRUE),\n    values = ~HUB,\n    title = \"HUB Eligibility\",\n    opacity = 0.7\n  ) %>%\n  addLayersControl(\n    overlayGroups = levels(vendors$HUB),\n    position = \"topleft\",\n    options = layersControlOptions(collapsed = FALSE)\n  ) %>%\n  setMaxBounds(expanded_bounds[1], expanded_bounds[2], expanded_bounds[3], expanded_bounds[4])\n\nm\n```\n\n```{=html}\n\n<script>\nfunction scrollToMap() {\n    const element = document.getElementById('vendor-map');\n    const headerOffset = 70; // height of your fixed header\n    const elementPosition = element.getBoundingClientRect().top;\n    const offsetPosition = elementPosition + window.pageYOffset - headerOffset;\n\n    window.scrollTo({\n        top: offsetPosition,\n        behavior: 'smooth'\n    });\n}\n</script>\n\n```\n\n\n```{=html}\n</div>\n</div>\n\n```\n\n:::"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":9,"fig-height":7,"fig-format":"retina","fig-dpi":300,"df-print":"default","error":true,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"www/web_report.scss","toc-title":"Contents","toc-location":"right","anchor-sections":false,"code-summary":"Reveal Code","code-copy":"hover","smooth-scroll":true,"grid":{"sidebar-width":"250px","body-width":"900px","margin-width":"300px"},"code-block-bg":true,"code-block-border-left":"#008097","message":false,"pagetitle":"Minority Businesses Map"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}