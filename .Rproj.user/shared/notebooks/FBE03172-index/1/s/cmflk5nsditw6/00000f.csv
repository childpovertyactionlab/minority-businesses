"0","child_pov_pal <- colorQuantile(colorRamp(c(""#e6eefa"", ""#0457d1""), interpolate = ""spline""), df$child_pov, n = 5)"
"0","child_pov_colors <- unique(child_pov_pal(sort(df$child_pov)))"
"0","child_pov_labs <- paste(scales::percent(lag(quantile(df$child_pov, seq(0, 1, .2), na.rm = T)), accuracy = 0.1), scales::percent(quantile(df$child_pov, seq(0, 1, .2), na.rm = T), accuracy = 0.1), sep = "" - "")[-1]"
"0",""
"0","leaflet(data = df) %>%"
"0","  addProviderTiles(""CartoDB.Positron"") %>%"
"0","  addPolygons(fillColor = ~child_pov_pal(child_pov),"
"0","              fillOpacity = 0.7, weight = 1,"
"0","              color = ""white"", dashArray = ""3"","
"0","              label = ~paste0(""Child child_pov rate: "", scales::percent(child_pov, accuracy = 0.1)),"
"0","              labelOptions = labelOptions(direction = 'auto', html = TRUE)) %>%"
"0","  addLegend(""bottomright"", "
"0","            colors = child_pov_colors,"
"0","            labels = child_pov_labs,"
"0","            title = ""Child Poverty Rate"","
"0","            opacity = 1) %>%"
"0","  addPolygons("
"0","    data = dallas,"
"0","    fillColor = ""#333333"","
"0","    fillOpacity = 0.1, weight = 2, color = ""#333333"","
"0","    smoothFactor = 1,"
"0","    options = pathOptions(clickable = F, interactive = F)"
"0","  ) %>%"
"0","  setMaxBounds(bounds[1], bounds[2], bounds[3], bounds[4])"
"2","Warning: sf layer has inconsistent datum (+proj=longlat +datum=NAD83 +no_defs).
Need '+proj=longlat +datum=WGS84'"
"2","Warning: sf layer has inconsistent datum (+proj=longlat +datum=NAD83 +no_defs).
Need '+proj=longlat +datum=WGS84'"
