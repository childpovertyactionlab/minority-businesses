---
pagetitle: "Minority Businesses Map"
format: html
---

```{r setup, output = F, echo = F}

library(tidycensus)
library(sf)
require(tidyverse)
library(leaflet)

# vendors <- readxl::read_excel(
#   "C:/Users/taylo/CPAL Dropbox/Analytics/Projects + Requests/External Requests/Impact Ventures/Business by Race/Comptroller State Approved Vendors.xlsx",
#   sheet = "DallasCountyVendors")
# 
# vendorsGC <- vendors %>%
#   mutate(`Mailing Address` = if_else(str_detect(`Mailing Address`, ",$"), 
#                                    `Mailing Address`, 
#                                    str_c(`Mailing Address`, ",")),
#          address = paste0(`Mailing Address`, " ", `City`, ", ", `State`, " ", `ZIP5`, ", ", `Country`)) %>%
#   tidygeocoder::geocode(address, method = "arcgis")
# 
# write_csv(vendorsGC, "data/geocoded_vendors.csv")

dallas_co <- tigris::counties(state = "TX") %>%
  filter(NAME == "Dallas")

data <- read_csv("data/geocoded_vendors.csv") %>%
  filter(`HUB Status` == "Yes") %>%
  mutate(HUB = factor(
    case_when(
      `HUB Eligibility` == "BL" ~ "Black",
      `HUB Eligibility` == "AS" ~ "Asian",
      `HUB Eligibility` == "HI" ~ "Hispanic",
      `HUB Eligibility` == "AI" ~ "Native American",
      `HUB Eligibility` == "WO" ~ "Women Owned",
      `HUB Eligibility` == "DV" ~ "Disabled Veteran",
      TRUE ~ NA_character_
    ),
    levels = c("Black", "Asian", "Hispanic", "Native American", "Women Owned", "Disabled Veteran")
  )) %>% 
  sf::st_as_sf(coords = c("long", "lat")) %>%
  sf::st_set_crs(sf::st_crs(dallas_co)) %>%
  sf::st_join(dallas_co, sf::st_within) %>%
  filter(!is.na(GEOID))

summary <- data %>%
  group_by(`Vendor ID`) %>%
  summarize(all_HUB = c(HUB)) %>%
  ungroup()

vendors <- data %>%
  left_join(summary, by = "Vendor ID")

bounds <- sf::st_bbox(dallas_co)

expanded_bounds <- as.vector(c(
  xmin = bounds["xmin"] - 0.25, 
  ymin = bounds["ymin"] - 0.25, 
  xmax = bounds["xmax"] + 0.25, 
  ymax = bounds["ymax"] + 0.25
))

map_palette <- c("#008097", "#ED683F", "#EACA2D", "#5C2B1C", "#ED018C", "#185411")

```


```{r avg_score}

m <- leaflet(data = vendors) %>%
  addTiles(urlTemplate = cpaltemplates::cpal_mapbox, attribution = cpaltemplates::cpal_leaflet) %>%
  addPolygons(
    data = dallas_co,
    fillColor = "#333333",
    fillOpacity = 0.03, weight = 2, color = "#333333",
    smoothFactor = 1,
    options = pathOptions(clickable = F, interactive = F)
  )

for(i in seq_along(levels(vendors$HUB))) {
  hub <- levels(vendors$HUB)[i]
  m <- m %>%
    addCircleMarkers(
      data = vendors %>% filter(HUB == hub),
      group = hub,
      radius = 5,
      stroke = FALSE,
      color = map_palette[i],
      fillOpacity = 0.7,
      clusterOptions = markerClusterOptions(
        maxClusterRadius = 60,
        disableClusteringAtZoom = 12
      ),
      label = ~company_name,
      popup = ~paste0(
        "<b>", company_name, "</b><br/>",
        
      )
    )
}

m <- m %>%
  addLegend(
    "bottomright",
    pal = colorFactor(map_palette, levels(vendors$HUB), na.color=NULL, ordered = TRUE),
    values = ~HUB,
    title = "HUB Eligibility",
    opacity = 0.7
  ) %>%
  addLayersControl(
    overlayGroups = levels(vendors$HUB),
    position = "bottomleft",
    options = layersControlOptions(collapsed = FALSE)
  ) %>%
  setMaxBounds(expanded_bounds[1], expanded_bounds[2], expanded_bounds[3], expanded_bounds[4])

m
```
